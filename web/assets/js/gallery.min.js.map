{"version":3,"names":["navigation","list","cols","document","addEventListener","e","key","preventDefault","selectItem","metaKey","id","getElementById","click","toggleFullScreen","hideSlideshow","isSlideshowActive","showSlideshow","toggleMarkedImage","checkIfImageIsMarked","event","currentImage","target","closest","dataset","active","contains","slideshow","parentElement","tagName","nodeName","classList","direction","columnsNumber","newImage","querySelector","parentLi","index","previousSibling","previousElementSibling","nextSibling","nextElementSibling","slideshowImage","src","setFocusOnCurrentImage","calcColumns","window","getComputedStyle","getPropertyValue","split","length","focus","createSlideshowOverlay","createElement","className","after","appendChild","closeBtn","innerHTML","markFileBtn","jsTrigger","fullscreenEnabled","createFullScreenBtn","selectedImage","arguments","undefined","fullscreenBtn","fullscreenElement","requestFullscreen","exitFullscreen","marked","localStorage","removeItem","setItem","getMarkImagesFromStorage","Object","keys","forEach","imgId","image","createMarkedImagesArray","gallery","markedImages","querySelectorAll","Array","from","map","img","URL","createMarkedImagesList","markedImagesArray","markedImagesList","showMarkedImagesDialog","dialog","content","getElementsByClassName","form","getElementsByTagName","htmlContent","input","value","close","showModal","initMarkedImages","deleteMarkedImages","submit","type","add","prepend","async","data","FormData","res","fetch","method","body","resData","json","removeDeletedImages","err","console","log","pathsArray","path","segments","filename","pop","li","newLi","style","setProperty","animationDuration","setTimeout","remove","initAlbums","albums","initGallery","initGalleryScript"],"sources":["gallery.js"],"sourcesContent":["// ------------------------\n// Navigation\n// ------------------------\n\nconst navigation = function (list, cols) {\n\n  // keyboard navigation\n  document.addEventListener(\"keydown\", (e) => {\n\n    switch (e.key) {\n\n      case \"ArrowRight\":\n        e.preventDefault();\n        selectItem(\"next\", list, cols);\n        break;\n\n      case \"ArrowLeft\":\n        e.preventDefault();\n        selectItem(\"previous\", list, cols);\n        break;\n\n      case \"ArrowUp\":\n        e.preventDefault();\n        selectItem(\"up\", list, cols);\n        break;\n\n      case \"ArrowDown\":\n        e.preventDefault();\n        selectItem(\"down\", list, cols);\n        break;\n\n      case \"i\":\n        if (e.metaKey) {\n          e.preventDefault();\n          if (list.id == 'gallery')\n            document.getElementById('index').click();\n        }\n        break;\n\n      case \"f\":\n          e.preventDefault()\n          toggleFullScreen();\n        break;\n    }\n\n    if (list.id == 'albums') { return; }\n\n    // Only listen to following keys for the gallery\n    switch (e.key) {\n      case \"Backspace\":\n        e.preventDefault();\n        hideSlideshow();\n        break;\n\n      case \" \":\n        e.preventDefault();\n        if ( isSlideshowActive ) {\n          hideSlideshow();\n          return;\n        }\n        showSlideshow();\n        break;\n\n      case \"Escape\":\n        if ( isSlideshowActive ) {\n          e.preventDefault();\n          hideSlideshow();\n        }\n        return;\n\n      case \"d\":\n          e.preventDefault();\n\n          // open dialog if meta key is pressed\n          if (e.metaKey) {\n            document.getElementById('show-marked').click();\n            return;\n          }\n          toggleMarkedImage();\n          checkIfImageIsMarked();\n        break;\n    }\n  }, false);\n\n  // Set currentImage on focus\n  list.addEventListener(\"focus\", (event) => {\n    currentImage = event.target.closest('a');\n    currentImage.dataset.active = true;\n    },\n    true\n  );\n\n  // Unset active set on blur\n  list.addEventListener(\"blur\", (event) => {\n    event.target.closest('a').dataset.active = false;\n    },\n    true\n  );\n\n  // console.log(list.id);\n  if (list.id == 'albums') { return; }\n  // console.log(list.id);\n\n  // Mouse navigation\n  document.addEventListener(\"click\", (e) => {\n    // Only intercept click that triggers the gallery or the slideshow\n    if (!list.contains(e.target)\n        && !slideshow.contains(e.target)\n        || e.target.parentElement.tagName == 'BODY'\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n\n    if ( isSlideshowActive == false ) {\n      // set the target as the current image\n      currentImage = e.target;\n\n      // if the target isn't directly the link, find the link\n      if (e.target.nodeName != 'A') {\n          currentImage = e.target.closest('a');\n      }\n\n      // show current image in slideshow\n      showSlideshow();\n    }\n\n    // close slideshow\n    else if ( e.target.nodeName == 'BUTTON' ) {\n      if (e.target.classList.contains('close'))\n        hideSlideshow();\n      else\n        toggleFullScreen();\n    }\n\n    // show next image\n    else {\n      selectItem('next', list, cols);\n    }\n  });\n}\n\nconst selectItem = function (direction, list, columnsNumber) {\n\n  currentImage = (currentImage == '') ? list.querySelector('a') : currentImage;\n\n  let newImage;\n  let parentLi = currentImage.closest('li');\n\n  switch (direction) {\n    case \"up\":\n      for (let index = 0; index < columnsNumber; index++) {\n          let previousSibling = parentLi.previousElementSibling;\n          if (!previousSibling) { break; }\n          parentLi = previousSibling;\n      }\n      break;\n\n    case \"down\":\n      for (let index = 0; index < columnsNumber; index++) {\n        let nextSibling = parentLi.nextElementSibling;\n        if (!nextSibling) { break; }\n        parentLi = nextSibling;\n      }\n      newImage = parentLi.querySelector('a');\n      break;\n\n    case \"previous\":\n      parentLi = parentLi.previousElementSibling;\n      break;\n\n    case \"next\":\n      parentLi = currentImage.closest('li').nextElementSibling;\n  }\n\n  if (!parentLi) return;\n\n  newImage = parentLi.querySelector('a');\n\n  currentImage = newImage;\n\n  // replace current slideshow image with new image\n  if ( isSlideshowActive ) {\n    checkIfImageIsMarked();\n    slideshowImage.src = currentImage.querySelector(\"img\").src;\n  }\n\n  // console.log('newImage', newImage);\n\n\n  // If slideshow not active set focus on new image\n  if( isSlideshowActive == false ) {\n    setFocusOnCurrentImage();\n  }\n}\n\n// Compute number of images per row to allow arrow up and down navigation\nconst calcColumns = function (list) {\n    // get current gallery css style\n    let gridStyle = window.getComputedStyle(list, null);\n    // calculate number of columns\n    let columnsNumber = gridStyle.getPropertyValue(\"grid-template-columns\").split(\" \").length;\n    // console.log(columnsNumber);\n\n  return columnsNumber;\n}\n\nconst setFocusOnCurrentImage = function() {\n  currentImage.dataset.active = true;\n  currentImage.focus();\n}\n\n// ------------------------\n// Slideshow\n// ------------------------\n\nlet slideshow, slideshowImage, currentImage = \"\";\nlet isSlideshowActive = false;\n\nconst createSlideshowOverlay = function (list) {\n  // create slideshow overlay\n  slideshow = document.createElement(\"div\");\n  slideshow.id = \"slideshow\";\n  slideshow.className = \"slideshow\";\n  list.after(slideshow);\n\n  // Create image inside overlay\n  slideshowImage = document.createElement(\"img\");\n  slideshowImage.id = \"img\";\n  slideshow.appendChild(slideshowImage);\n\n  // Add close button\n  const closeBtn = document.createElement(\"button\");\n  closeBtn.innerHTML = 'Close <span class=\"shortcut\">ESC</span>';\n  closeBtn.className = \"btn close\";\n  slideshow.appendChild(closeBtn);\n\n  // Add mark file button\n  const markFileBtn = document.createElement(\"button\");\n  markFileBtn.innerHTML = 'Mark file <span class=\"shortcut\">D</span>';\n  markFileBtn.className = \"btn\";\n  markFileBtn.dataset.jsTrigger = \"mark-file\";\n  slideshow.appendChild(markFileBtn);\n\n  // Add fullscreen button only if the device supports it\n  if (document.fullscreenEnabled) {\n    createFullScreenBtn();\n  }\n\n  // By default hide the slideshow\n  slideshow.dataset.active = false;\n}\n\nconst showSlideshow = function (selectedImage = currentImage) {\n  // console.log('selectedImage', selectedImage);\n\n  // replace slideshow image src then show slideshow\n  slideshowImage.src = selectedImage.querySelector('img').src;\n  // mark image if needed\n  checkIfImageIsMarked();\n  // finally mark slideshow as active\n  slideshow.dataset.active = true;\n\n  isSlideshowActive = true\n}\n\nconst hideSlideshow = function () {\n  // Mark slideshow as inactive\n  slideshow.dataset.active = false;\n  setFocusOnCurrentImage();\n  isSlideshowActive = false\n}\n\n// ------------------------\n// Fullscreen\n// ------------------------\n\nconst createFullScreenBtn = function() {\n  const fullscreenBtn = document.createElement(\"button\");\n  fullscreenBtn.innerHTML = 'Fullscreen <span class=\"shortcut\">F</span>';\n  fullscreenBtn.className = \"btn fullscreen\";\n  slideshow.appendChild(fullscreenBtn);\n}\n\nconst toggleFullScreen = function() {\n  if (!document.fullscreenElement && isSlideshowActive) {\n    slideshow.requestFullscreen();\n  } else if (document.exitFullscreen) {\n    document.exitFullscreen();\n  }\n}\n\n// ------------------------\n// Mark images\n// ------------------------\n\nconst checkIfImageIsMarked = function () {\n  slideshowImage.dataset.marked = currentImage.dataset.marked;\n  currentImage.focus();\n}\n\nconst toggleMarkedImage = function() {\n  // Unmark image\n  if (currentImage.dataset.marked === \"true\") {\n    currentImage.dataset.marked = slideshowImage.dataset.marked = \"false\";\n    localStorage.removeItem(currentImage.id);\n    return;\n  }\n\n  // Mark image\n  currentImage.dataset.marked = slideshowImage.dataset.marked = \"true\";\n  localStorage.setItem(currentImage.id, \"true\");\n}\n\nconst getMarkImagesFromStorage = function () {\n  Object.keys(localStorage).forEach(imgId => {\n    const image = document.getElementById(imgId);\n    if (image) {\n      image.dataset.marked = \"true\";\n    }\n  });\n}\n\nconst createMarkedImagesArray = function(gallery) {\n  // Select all marked images\n  const markedImages = gallery.querySelectorAll('a[data-marked=true] img');\n\n  // Extract the image names\n  let markedImagesArray = Array.from(markedImages).map(img => {\n    const url = new URL(img.src);\n    return url;\n  });\n\n  return markedImagesArray;\n}\n\nconst createMarkedImagesList = function(markedImagesArray = null, gallery) {\n  if (markedImagesArray === null) {\n    markedImagesArray = createMarkedImagesArray(gallery);\n  }\n\n  if ( markedImagesArray.length == 0) {\n    return;\n  }\n\n  let markedImagesList = '<ul>';\n      markedImagesArray.forEach(img => {\n        markedImagesList += '<li><img class=\"preview\" src=\"'+ img +'\" /></li>';\n      });\n      markedImagesList += '</ul>';\n\n  return markedImagesList;\n}\n\nconst showMarkedImagesDialog = function(gallery) {\n\n  const dialog = document.getElementById('markedImagesDialog');\n  const content = dialog.getElementsByClassName('content')[0];\n  const form = dialog.getElementsByTagName('form')[0];\n  let htmlContent = '';\n\n  // Retrieve all marked images\n  const markedImagesArray = createMarkedImagesArray(gallery);\n\n  // Create marked images url list\n  const markedImagesList = createMarkedImagesList(markedImagesArray, gallery);\n\n  // Add data to popin content\n  if (markedImagesArray.length) {\n    htmlContent = markedImagesList;\n\n    let input = document.getElementById('markedImagesInput');\n    input.value = markedImagesArray;\n    form.appendChild(input);\n\n  } else {\n    htmlContent = '<p>No marked image yet!</p>';\n  }\n  content.innerHTML = htmlContent;\n\n  // Bind cancel button\n  const closeBtn = form.querySelector('.btn.cancel');\n  // console.log(closeBtn);\n  closeBtn.addEventListener(\"click\", event => {\n    event.preventDefault();\n    dialog.close();\n  }, false);\n\n  // Show popin\n  dialog.showModal();\n}\n\nconst initMarkedImages = function(gallery) {\n  getMarkImagesFromStorage();\n\n  document.getElementById(\"mark-file\").addEventListener(\"click\", function(event) {\n    event.preventDefault();\n    toggleMarkedImage();\n    checkIfImageIsMarked();\n  }, false);\n\n  document.getElementById(\"show-marked\").addEventListener(\"click\", function(event) {\n    event.preventDefault();\n    showMarkedImagesDialog(gallery)\n  }, false);\n}\n\n// ------------------------\n// Delete marked images\n// ------------------------\n\nconst deleteMarkedImages = function() {\n  const dialog = document.getElementById('markedImagesDialog');\n  const form = dialog.getElementsByTagName('form')[0];\n\n  // Create delete button\n  let submit = document.createElement('button');\n  submit.type = 'submit';\n  submit.id = 'delete-marked-images';\n  submit.innerHTML = 'Delete';\n  submit.classList.add('btn','delete');\n  form.prepend(submit);\n\n  // Send marked items to be deleted\n  form.addEventListener('submit', async event => {\n    event.preventDefault();\n\n    const data = new FormData(form);\n\n    try {\n      const res = await fetch('/delete.php', {\n        method: 'POST',\n        body: data\n      });\n\n      const resData = await res.json();\n      // console.log(resData);\n\n      dialog.close();\n\n      removeDeletedImages(resData);\n\n    } catch (err) {\n      console.log(err);\n    }\n  });\n}\n\nconst removeDeletedImages = function(pathsArray) {\n  pathsArray.forEach(path => {\n\n    // Extract filename without extension and gallery name from path\n    let segments = path.split('/');\n    let filename = segments.pop();\n    filename = filename.split('.')[0];\n    let gallery = segments.pop();\n\n    // Get item parent li\n    let id = 'gallery-' + gallery + '_' + filename;\n\n    // Remove item from localstorage\n    localStorage.removeItem(id);\n\n    let image = document.getElementById(id);\n    let li = image.parentElement;\n\n    // If the current image is removed, select another image\n    if ( currentImage.id == id ) {\n      let newLi = li.nextElementSibling;\n      newLi = newLi ? li.nextElementSibling : li.previousElementSibling;\n      currentImage = newLi.querySelector('a');\n    }\n\n    // Remove li from DOM with animation\n    let animationDuration = 500;\n    li.style.setProperty('--delete-animation-duration', animationDuration + 'ms');\n    li.classList.add('deleted');\n    setTimeout(() => {li.remove(); currentImage.focus()}, animationDuration);\n  });\n}\n\n\n// ------------------------\n// Init\n// ------------------------\n\nconst initAlbums = function (albums) {\n  // By default select the first album\n  currentImage = albums.querySelector('a');\n  currentImage.focus();\n\n  let cols = calcColumns(albums);\n\n  window.addEventListener('resize', function () {\n    cols = calcColumns(albums);\n  }, false);\n\n  navigation(albums, cols);\n}\n\nconst initGallery = function (gallery) {\n  // By default select the first image\n  currentImage = gallery.querySelector('a');\n  currentImage.focus();\n\n  let cols = calcColumns(gallery);\n\n  window.addEventListener('resize', function () {\n    cols = calcColumns(gallery);\n  }, false);\n\n  navigation(gallery, cols);\n\n  createSlideshowOverlay(gallery);\n\n  initMarkedImages(gallery);\n\n  deleteMarkedImages();\n}\n\nconst initGalleryScript = function () {\n  const albums = document.getElementById(\"albums\");\n  if (albums) {\n    initAlbums(albums);\n    return;\n  }\n\n  const gallery = document.getElementById(\"gallery\");\n  if (gallery) {\n    initGallery(gallery);\n    return;\n  }\n}\n\ninitGalleryScript();"],"mappings":"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","ignoreList":[]}